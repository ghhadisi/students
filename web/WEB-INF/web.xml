<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_4_0.xsd"
           version="3.0">
    <display-name>students system</display-name>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>


    <servlet>
        <servlet-name>studetsSearch</servlet-name>
        <servlet-class>com.hss.student.setvlets.StudetsSearchServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>studetsSearch</servlet-name>
        <url-pattern>/studetsSearch</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>studentUpdateServlet</servlet-name>
        <servlet-class>com.hss.student.setvlets.StudentUpdateServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>studentUpdateServlet</servlet-name>
        <url-pattern>/studentUpdate</url-pattern>
    </servlet-mapping>



    <servlet>
        <servlet-name>studentDetailServlet</servlet-name>
        <servlet-class>com.hss.student.setvlets.StudentDetailServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>studentDetailServlet</servlet-name>
        <url-pattern>/studentDetail</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>studetDeleteServlet</servlet-name>
        <servlet-class>com.hss.student.setvlets.StudetDeleteServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>studetDeleteServlet</servlet-name>
        <url-pattern>/studetDelete</url-pattern>
    </servlet-mapping>



    <servlet>
        <servlet-name>UserNameCheckServlet</servlet-name>
        <servlet-class>com.hss.student.setvlets.UserNameCheckServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>UserNameCheckServlet</servlet-name>
        <url-pattern>/userNameCheckServlet</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>KeyWordsServlet</servlet-name>
        <servlet-class>com.hss.student.setvlets.KeyWordsServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>KeyWordsServlet</servlet-name>
        <url-pattern>/keyWordsServlet</url-pattern>
    </servlet-mapping>



    <servlet>
        <servlet-name>DataXmlServlet</servlet-name>
        <servlet-class>com.hss.student.setvlets.DataXmlServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>DataXmlServlet</servlet-name>
        <url-pattern>/dataXmlServlet</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>DataJsonServlet</servlet-name>
        <servlet-class>com.hss.student.setvlets.DataJsonServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>DataJsonServlet</servlet-name>
        <url-pattern>/dataJsonServlet</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ListenerServlet</servlet-name>
        <servlet-class>com.hss.student.setvlets.ListenerServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>ListenerServlet</servlet-name>
        <url-pattern>/listenerServlet</url-pattern>
    </servlet-mapping>



    <!--listener 总共有8个 划分成三种类型-->
        <!--监听三个作用域创建和销毁-->
    <listener>
        <listener-class>com.hss.student.listener.life.MyServletContextListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.hss.student.listener.life.MySessionListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.hss.student.listener.life.MyServletRequestListener</listener-class>
    </listener>
        <!--监听三个作用域创建和销毁-->
        <!--属性变更-->
    <listener>
        <listener-class>com.hss.student.listener.attrchange.MySessionAttrChangeListener</listener-class>
    </listener>


    <!--监听httpSession里面存值的状态变更-->
    <listener>
        <listener-class>com.hss.student.listener.active.MyHttpSessionActivationListener</listener-class>
    </listener>

    <!--listener-->



    <!--filter -->

    <filter>
        <filter-name>Filter1</filter-name>
        <filter-class>com.hss.student.filter.Filter1</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Filter1</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
<!--


		chain.doFilter(request, response); 放行， 让请求到达下一个目标。

	1. 全路径匹配  以 /  开始

			/LoginServlet

	2. 以目录匹配 以 / 开始  以 * 结束

		/demo01/*

	3. 以后缀名匹配  以 * 开始 以后缀名结束

		*.jsp  *.html *.do


		4. 针对 dispatcher 设置

		REQUEST ： 只要是请求过来，都拦截，默认就是REQUEST
		FORWARD : 只要是转发都拦截。
		ERROR ： 页面出错发生跳转
		INCLUDE ： 包含页面的时候就拦截。
-->

  <!--  <filter>
        <filter-name>Filter4</filter-name>
        <filter-class>com.hss.student.filter.Filter4</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Filter4</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <filter>
        <filter-name>Filter2</filter-name>
        <filter-class>com.hss.student.filter.Filter2</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Filter2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>Filter3</filter-name>
        <filter-class>com.hss.student.filter.Filter3</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Filter3</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->



</web-app>
